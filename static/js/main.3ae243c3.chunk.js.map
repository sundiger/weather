{"version":3,"sources":["images/01d.svg","images sync /^/.*/.svg$","images/01n.svg","images/02d.svg","images/02n.svg","images/03d.svg","images/03n.svg","images/04d.svg","images/04n.svg","images/09d.svg","images/09n.svg","images/10d.svg","images/10n.svg","images/11d.svg","images/11n.svg","images/13d.svg","images/13n.svg","images/50d.svg","images/50n.svg","images/cloudy_moon.svg","components/MainWeatherWindow.js","components/CityInput.js","components/WeatherBox.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","MainWeatherWindow","props","Title","this","city","className","style","color","src","data","require","icon","alt","visibility","opacity","Math","round","temp","weather_desc","toLowerCase","children","React","Component","CityInput","onKlickHandler","a","persist","eventKey","which","keyCode","target","value","test","classList","add","makeApiCall","placeholder","remove","top","width","display","padding","lineHeight","position","borderRadius","outline","fontSize","transition","type","onKeyPress","WeatherBox","getDay","date","weekday","Array","Date","App","state","undefined","days","updateState","name","dayIndices","getDayIndices","i","push","list","dt_txt","weather","description","main","setState","fetch","then","resp","json","api_data","cod","index","tmp","slice","bind","weatherBoxes","day","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ae243c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/01d.effc7a8c.svg\";","var map = {\n\t\"./01d.svg\": 8,\n\t\"./01n.svg\": 21,\n\t\"./02d.svg\": 22,\n\t\"./02n.svg\": 23,\n\t\"./03d.svg\": 24,\n\t\"./03n.svg\": 25,\n\t\"./04d.svg\": 26,\n\t\"./04n.svg\": 27,\n\t\"./09d.svg\": 28,\n\t\"./09n.svg\": 29,\n\t\"./10d.svg\": 30,\n\t\"./10n.svg\": 31,\n\t\"./11d.svg\": 32,\n\t\"./11n.svg\": 33,\n\t\"./13d.svg\": 34,\n\t\"./13n.svg\": 35,\n\t\"./50d.svg\": 36,\n\t\"./50n.svg\": 37,\n\t\"./cloudy_moon.svg\": 38\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10;","module.exports = __webpack_public_path__ + \"static/media/01n.effc7a8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/02d.d4a8aa55.svg\";","module.exports = __webpack_public_path__ + \"static/media/02n.d4a8aa55.svg\";","module.exports = __webpack_public_path__ + \"static/media/03d.960b324d.svg\";","module.exports = __webpack_public_path__ + \"static/media/03n.960b324d.svg\";","module.exports = __webpack_public_path__ + \"static/media/04d.7eedcf5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/04n.7eedcf5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/09d.efc5a4e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/09n.efc5a4e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/10d.d98fe1e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/10n.d98fe1e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/11d.3c76c82e.svg\";","module.exports = __webpack_public_path__ + \"static/media/11n.3c76c82e.svg\";","module.exports = __webpack_public_path__ + \"static/media/13d.b8d8ad4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/13n.b8d8ad4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/50d.1186186b.svg\";","module.exports = __webpack_public_path__ + \"static/media/50n.1186186b.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy_moon.222a8c32.svg\";","import React from 'react';\r\nimport './MainWeatherWindow.css';\r\n\r\nexport default class MainWeatherWindow extends React.Component {\r\n  render(props) {\r\n    const Title = this.props.city ? null : <h1 className='title' style={{color: 'white'}}>Погода</h1>;\r\n\r\n    return (\r\n      <div className='main'>\r\n        <div className='inner-main'>\r\n          {Title}\r\n          <img\r\n            src={\r\n              this.props.data\r\n                ? require(`../images/${this.props.data.icon}.svg`)\r\n                : require('../images/01d.svg')\r\n            }\r\n            alt='sun'\r\n            style={{\r\n              visibility: this.props.city ? 'visible' : 'hidden',\r\n              opacity: this.props.city ? '1' : '0'\r\n            }}\r\n          />\r\n\r\n          <div\r\n            className='today'\r\n            style={{\r\n              visibility: this.props.city ? 'visible' : 'hidden',\r\n              opacity: this.props.city ? '1' : '0'\r\n            }}\r\n          >\r\n            <span>Сегодня</span>\r\n            <h1>{this.props.city}</h1>\r\n            <p style={{color: 'white'}}>\r\n              Температура: {this.props.data ? Math.round(this.props.data.temp - 273.15) : 0}\r\n              °C\r\n            </p>\r\n            <p style={{color: 'white'}}>{this.props.data ? this.props.data.weather_desc.toLowerCase() : ''}</p>\r\n          </div>\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './CityInput.css';\r\n\r\nexport default class CityInput extends React.Component {\r\n  render(props) {\r\n    const onKlickHandler = async e => {\r\n      e.persist();\r\n      const eventKey = e.which ? e.which : e.keyCode;\r\n      const city = e.target.value;\r\n\r\n      // проверьте, содержит ли ввод только буквы после нажатия клавиши Enter\r\n      if (eventKey === 13) {\r\n        if (/^[a-zA-Z-а-яА-Я ]+$/.test(city)) {\r\n          e.target.classList.add('loading');\r\n\r\n          if (await this.props.makeApiCall(city)) e.target.placeholder = 'Введите город...';\r\n          else e.target.placeholder = 'Город не найден, попробуйте еще раз...';\r\n        } else e.target.placeholder = 'Пожалуйста введите правильно название города...';\r\n        e.target.classList.remove('loading');\r\n        e.target.value = '';\r\n      }\r\n    };\r\n\r\n    const style = {\r\n      top: this.props.city ? '-380px' : '-20px',\r\n      width: '600px',\r\n      display: 'inline-block',\r\n      padding: '10px 0px 10px 30px',\r\n      lineHeight: '120%',\r\n      position: 'relative',\r\n      borderRadius: '20px',\r\n      outline: 'none',\r\n      fontSize: '20px',\r\n      transition: 'all 0.5s ease-out'\r\n    };\r\n\r\n    return (\r\n      <input\r\n        className='city-input'\r\n        style={style}\r\n        type='text'\r\n        placeholder='Введите город...'\r\n        onKeyPress={onKlickHandler}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './WeatherBox.css';\r\n\r\nexport default class WeatherBox extends React.Component {\r\n  // возвращает день недели к заданному значению даты\r\n  getDay = date => {\r\n    let weekday = new Array(7);\r\n    weekday[0] = 'Воскресенье';\r\n    weekday[1] = 'Поннедельник';\r\n    weekday[2] = 'Вторник';\r\n    weekday[3] = 'Среда';\r\n    weekday[4] = 'Четверг';\r\n    weekday[5] = 'Пятница';\r\n    weekday[6] = 'Суббота';\r\n\r\n    return weekday[new Date(date).getDay()];\r\n  };\r\n\r\n  render(props) {\r\n    return (\r\n      <div className='weather-box'>\r\n        <h1>{this.props.date ? this.getDay(this.props.date) : ''}</h1>\r\n        <img\r\n          src={\r\n            this.props.icon\r\n              ? require(`../images/${this.props.icon}.svg`)\r\n              : require('../images/01d.svg')\r\n          }\r\n          alt='Солнечно'\r\n        />\r\n        <span className='temp'>{Math.round(this.props.temp - 273.15)}°C</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MainWeatherWindow from './components/MainWeatherWindow';\r\nimport CityInput from './components/CityInput';\r\nimport WeatherBox from './components/WeatherBox';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    city: undefined,\r\n\r\n    // дни содержат объекты со следующими свойствами:\r\n    // date, weather_desc, icon, temp\r\n    days: new Array(5)\r\n  };\r\n\r\n  // создает объекты дня и обновляет состояние\r\n  updateState = data => {\r\n    const city = data.city.name;\r\n    const days = [];\r\n    const dayIndices = this.getDayIndices(data);\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      days.push({\r\n        date: data.list[dayIndices[i]].dt_txt,\r\n        weather_desc: data.list[dayIndices[i]].weather[0].description,\r\n        icon: data.list[dayIndices[i]].weather[0].icon,\r\n        temp: data.list[dayIndices[i]].main.temp\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      city: city,\r\n      days: days\r\n    });\r\n  };\r\n\r\n  // пытается выполнить вызов API с заданным названием города и запускает обновление состояния\r\n  makeApiCall = async city => {\r\n    const api_data = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=6557810176c36fac5f0db536711a6c52`\r\n    ).then(resp => resp.json());\r\n\r\n    if (api_data.cod === '200') {\r\n      await this.updateState(api_data);\r\n      return true;\r\n    } else return false;\r\n  };\r\n\r\n  // возвращает массив с индексами следующих пяти дней в списке\r\n  // из данных API (каждый день в 12:00 вечера)\r\n  getDayIndices = data => {\r\n    let dayIndices = [];\r\n    dayIndices.push(0);\r\n\r\n    let index = 0;\r\n    let tmp = data.list[index].dt_txt.slice(8, 10);\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      while (\r\n        tmp === data.list[index].dt_txt.slice(8, 10) ||\r\n        data.list[index].dt_txt.slice(11, 13) !== '15'\r\n      ) {\r\n        index++;\r\n      }\r\n      dayIndices.push(index);\r\n      tmp = data.list[index].dt_txt.slice(8, 10);\r\n    }\r\n    return dayIndices;\r\n  };\r\n\r\n  render() {\r\n    const WeatherBoxes = () => {\r\n      const weatherBoxes = this.state.days.slice(1).map(day => (\r\n        <li>\r\n          <WeatherBox {...day} />\r\n        </li>\r\n      ));\r\n\r\n      return <ul className='weather-box-list'>{weatherBoxes}</ul>;\r\n    };\r\n\r\n    return (\r\n      <div className='App'>\r\n        <header className='App-header'>\r\n          <MainWeatherWindow data={this.state.days[0]} city={this.state.city}>\r\n            <CityInput city={this.state.city} makeApiCall={this.makeApiCall.bind(this)} />\r\n            <WeatherBoxes />\r\n          </MainWeatherWindow>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('Нет интернета');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}